apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-backend
  labels:
    app: health-system
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: health-system
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: health-system
        tier: backend
    spec:
      containers:
      - name: django-app
        image: health-system-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "500m"
            memory: "500Mi"
          requests:
            cpu: "200m"
            memory: "200Mi"
        env:
        - name: DEBUG
          value: "False"
        - name: DB_ENGINE
          value: "django.db.backends.postgresql"
        - name: DB_HOST
          value: "health-db-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: dbname
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: health-app-secrets
              key: django-secret-key
        readinessProbe:
          httpGet:
            path: /health-check/
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health-check/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: health-backend-service
  labels:
    app: health-system
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: health-system
    tier: backend