apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: health-db
  labels:
    app: health-system
    tier: database
spec:
  serviceName: "health-db"
  replicas: 1
  selector:
    matchLabels:
      app: health-system
      tier: database
  template:
    metadata:
      labels:
        app: health-system
        tier: database
    spec:
      containers:
      - name: postgres
        image: postgres:14-alpine
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: health-db-data
          mountPath: /var/lib/postgresql/data
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: dbname
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: health-db-secrets
              key: password
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "500Mi"
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 45
          periodSeconds: 20
  volumeClaimTemplates:
  - metadata:
      name: health-db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: health-db-service
  labels:
    app: health-system
    tier: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: health-system
    tier: database